#!/bin/bash

###########################################################################
###########################################################################
#####
#####  C O N F I G U R A T I O N
#####
###########################################################################
###########################################################################

panic ()
{
    echo "ERROR: $@"
    exit 1
}

# Make sure gcc is on the right remote branch 4.9.0
cd ../gcc/gcc-SaberMod && git fetch sm 4.9.0 && git checkout FETCH_HEAD && cd ../../build;

# Do not use default compiler x86_64-linux-gnu
# This can cause a lot of problems when attempting to compile a target gcc where the version is much higher than the linux system compiler.
export CC=gcc-4.8;
export CXX=g++-4.8;

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# ***WARNING***  This script will build two different targets for linux!  This will take a extremly long time depending on your system
# Could take up to two hours or more on a 8 core processor with 16GB of RAM

# Try to parallelize the build for faster performance.
JOBS=$(cat /proc/cpuinfo | grep -c processor);

# Determine Make flags
MAKE_FLAGS=-j$JOBS

# ***Stage one build x86_64-linux***

# Force cleaning each time
if [ -e Makefile ];
then
    make $MAKE_FLAGS clean;
    make $MAKE_FLAGS distclean;
fi;

# Expat and gmp don't always go away
if [ -e expat-2.0.1 ];
then
    rm -rf expat-2.0.1;
fi;

if [ -e gmp-gnu ];
then
    rm -rf gmp-gnu;
fi;

export PREFIX_PATH=~/tmp/x86_64-linux-4.9;
export PREFIX=--prefix=$PREFIX_PATH;

if [ -d "$PREFIX_PATH" ];
then
    rm -rf $PREFIX_PATH;
    mkdir -p $PREFIX_PATH;
else
    mkdir -p $PREFIX_PATH
fi;

./configure $PREFIX --with-sysroot=/ --target=x86_64-linux-gnu --program-transform-name='s&^&x86_64-linux-&' --with-gcc-version=SaberMod --with-pkgversion='SaberMod-x86_64-linux-graphite' --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-cloog-version=0.18.0 --with-isl-version=0.11.1 --enable-graphite=yes --with-gold-version=gnu --enable-gold=default --enable-shared --enable-plugins --disable-libsanitizer --disable-libquadmath --disable-libatomic

# Build the toolchain
make $MAKE_FLAGS;

#Install the toolchain (twice)
make install && make install;

GCC_INSTALLED=$PREFIX_PATH/bin/x86_64-linux-gcc

# Did we make it?
if [ -e $GCC_INSTALLED ];
then
    echo "";
else
    ./build-failed;
fi;

# ***Stage two build i686-linux***

#!/bin/bash

panic ()
{
    echo "ERROR: $@"
    exit 1
}

# Do not use default compiler x86_64-linux-gnu
# This can cause a lot of problems when attempting to compile a target gcc where the version is much higher than the linux system compiler.
export CC=gcc-4.8;
export CXX=g++-4.8;

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# ***WARNING***  This script will build two different targets for linux!  This will take a extremly long time depending on your system
# Could take up to two hours or more on a 8 core processor with 16GB of RAM

# Try to parallelize the build for faster performance.
JOBS="$(cat /proc/cpuinfo | grep -c processor)";

# Determine Make flags
MAKE_FLAGS=-j"$JOBS"

#!/bin/bash

# Force cleaning each time
if [ -e Makefile ];
then
    make $MAKE_FLAGS clean;
    make $MAKE_FLAGS distclean;
fi;

# Expat and gmp don't always go away
if [ -e expat-2.0.1 ];
then
    rm -rf expat-2.0.1;
fi;

if [ -e gmp-gnu ];
then
    rm -rf gmp-gnu;
fi;

export PREFIX_PATH=~/tmp/i686-linux-4.9;
export PREFIX=--prefix=$PREFIX_PATH;

if [ -d "$PREFIX_PATH" ];
then
    rm -rf $PREFIX_PATH;
    mkdir -p $PREFIX_PATH;
else
    mkdir -p $PREFIX_PATH
fi;

./configure $PREFIX --with-sysroot=/ --target=i686-linux-gnu --program-transform-name='s&^&i686-linux-&' --with-gcc-version=SaberMod --with-pkgversion='SaberMod-x86_64-linux-graphite' --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-cloog-version=0.18.0 --with-isl-version=0.11.1 --enable-graphite=yes --with-gold-version=gnu --enable-gold=default --enable-shared --enable-plugins --disable-libsanitizer --disable-libquadmath --disable-libatomic

# Build the toolchain
make $MAKE_FLAGS;

#Install the toolchain (twice)
make install && make install;

GCC_INSTALLED=$PREFIX_PATH/bin/i686-linux-gcc

# Did we make it?
if [ -e $GCC_INSTALLED ];
then
    echo "";
else
    ./build-failed;
fi;

