#!/bin/bash

###########################################################################
###########################################################################
#####
#####  C O N F I G U R A T I O N
#####
###########################################################################
###########################################################################

panic ()
{
    echo "ERROR: $@"
    exit 1
}

# Do not use default compiler x86_64-linux-gnu
# This can cause a lot of problems when attempting to compile a target gcc where the version is much higher than the linux system compiler.
export CC=gcc-4.8;
export CXX=g++-4.8;

# Make sure gcc is on the right remote branch 4.8.3
cd ../gcc/gcc-SaberMod && git fetch sm 4.8.3 && git checkout FETCH_HEAD && cd ../../build;

# Add time just for fun
export TIME=time;

# Set number of cores here
export J=-j16;

export PREFIX_PATH=~/tmp/arm-eabi-4.8;
export PREFIX=--prefix=$PREFIX_PATH;

#Make a clean build
if [ -e Makefile ];
then
    $TIME make $J distclean;
fi;

# Expat and gmp don't always go away
if [ -e expat-2.0.1 ];
then
    rm -rf expat-2.0.1;
fi;

if [ -e gmp-gnu ];
then
    rm -rf gmp-gnu;
fi;

#Make a clean install always
if [ -d "$PREFIX_PATH" ];
then
    rm -rf $PREFIX_PATH;
fi;

# Logging?
#LOG=$PREFIX_PATH > toolchain-log.txt
#mkdir $PREFIX_PATH;

#Build Configuration
./configure $PREFIX --with-sysroot=/ --target=arm-eabi --host=x86_64-linux-gnu --build=x86_64-linux-gnu --program-transform-name='s&^&arm-eabi-&' --with-gcc-version=SaberMod --with-pkgversion="SaberMod-4.8.3_arm-graphite" --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-mpc-version=gnu --with-gdb-version=gnu --with-cloog-version=0.18.0 --with-isl-version=0.11.1 --enable-graphite=yes --with-gold-version=gnu --enable-gold=default --enable-plugins

#Build the toolchain
$TIME make $J;

#Install the toolchain (twice)
make install && make install;

